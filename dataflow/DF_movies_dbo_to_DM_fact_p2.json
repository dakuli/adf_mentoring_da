{
	"name": "DF_movies_dbo_to_DM_fact_p2",
	"properties": {
		"folder": {
			"name": "archive"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_dbo_tOnlinePurchase",
						"type": "DatasetReference"
					},
					"name": "tOnlinePurchase"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_dbo_tOnlineService",
						"type": "DatasetReference"
					},
					"name": "tOnlineService"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_DM_DimOnlineService",
						"type": "DatasetReference"
					},
					"name": "DimOnlineService"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_DM_FactOnlinePurchase_MonthlySnapshot",
						"type": "DatasetReference"
					},
					"name": "loadFactOnlinePurchaseSN"
				}
			],
			"transformations": [
				{
					"name": "addMonthKey"
				},
				{
					"name": "joinDboService"
				},
				{
					"name": "joinDimService"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          ServiceId as integer,",
				"          MovieId as integer,",
				"          UserId as integer,",
				"          Price as decimal(4,1),",
				"          TransactionId as string,",
				"          TransactionDate as timestamp,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tOnlinePurchase",
				"source(output(",
				"          ServiceId as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tOnlineService",
				"source(output(",
				"          ServiceKey as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimOnlineService",
				"joinDimService derive(dMonthKey = replace(left(toString(TransactionDate), 7), '-', '')) ~> addMonthKey",
				"tOnlinePurchase, tOnlineService join(tOnlinePurchase@ServiceId == tOnlineService@ServiceId,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinDboService",
				"joinDboService, DimOnlineService join(tOnlineService@ServiceCode == DimOnlineService@ServiceCode,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinDimService",
				"addMonthKey aggregate(groupBy(dMonthKey,",
				"          ServiceKey),",
				"     PurchaseAmount = sum(Price),",
				"          PurchaseQuantity = count(TransactionId)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     input(",
				"          MonthKey as integer,",
				"          OnlineServiceKey as integer,",
				"          PurchaseAmount as decimal(10,1),",
				"          PurchaseQuantity as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['truncate table DataMart.dbo.FactOnlinePurchase_MonthlySnapshot;'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          MonthKey = dMonthKey,",
				"          OnlineServiceKey = ServiceKey,",
				"          PurchaseAmount,",
				"          PurchaseQuantity",
				"     )) ~> loadFactOnlinePurchaseSN"
			]
		}
	}
}